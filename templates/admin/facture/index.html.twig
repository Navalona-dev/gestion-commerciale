<style>
    .dataTables_scroll {
      margin-top: 50px !important;
      margin-bottom: 30px !important;
    }
    td, tr {
      border-bottom: none !important;
    }

    .card-head {
        border: 1px solid #2a4ce8;
    }

    .icon-check {
        padding: 5px 8px;
        background-color: #2a4ce8;
        font-size: 25px;
        color: #fff;
        border-radius: 5px;
    }

    .icon-reload {
        padding: 5px 8px;
        background-color: #ffc107;
        font-size: 25px;
        color: #000;
        border-radius: 5px;
    }

    .icon-reload:hover {
        color: #000;
    }

    .title h3 {
        font-size: 19px;
        color: #2a4ce8;
    }

    .custom-checkbox {
        width: 20px;  
        height: 20px; 
    }

    .export-btn {
        border-radius: 7px;
        color: #fff;
    }

    .export-btn:hover {
        background-color: #ffc107 !important;
    }

    .bg-danger {
        background-color:  #f88789 !important;
    }
   
  </style>
  
  <div class="pagetitle">
      <h1>Liste facture </h1>
      <nav>
        <ol class="breadcrumb">
          <li class="breadcrumb-item"><a href="{{path('app_admin')}}">Tableau de board</a></li>
          <li class="breadcrumb-item active">Liste</li>
        </ol>
      </nav>
    </div>
   
  <section class="section">
      <div class="row">
        <div class="col-lg-12">
          <div class="card card-head py-4 px-3">
            <div class="row">
                <div class="col-md-3 col-12 d-flex align-items-center justify-content-center">
                    <div class="title">
                        <h3 class="fw-bold">Factures clients</h3>
                    </div>
                </div>
                
                <div class="col-md-8 col-12">
                    <div class="row">
                        <div class="col-md-4 col-12">
                            <div class="input-group mb-3">
                                    <div>&nbsp;</div>
                                {# <span class="input-group-text" style="border-right: none; height: 38px;"><i class="bi bi-people-fill"></i></span>
                                <input id="nom_compte" type="text" name="nom_compte" class="form-control form-control-sm" /> #}
                                {# <select name="filter_compte" id="filter_compte" class="mb-3 form-control form-control-md" style="border-left: none;">
                                    <option value="" disabled selected><span class="mx-3">Tapez le nom du client</span></option>
                                    <option value="Client 1">Client 1</option>
                                    <option value="Client 2">Client 2</option>
                                    <option value="Client 3">Client 3</option>
                                    <option value="Client 4">Client 4</option>
                                </select> #}
                              </div>
                            <p class="d-flex justify-content-end mb-4">Date facture</p>
                            <p class="d-flex justify-content-end mb-3">Date de paiement</p>
                        </div>
                        <div class="col-md-4 col-12">
                            <div class="input-group mb-3">
                                <span class="input-group-text" style="border-right: none; height: 38px;"><i class="bi bi-people-fill"></i></span>
                                <input id="nom_compte" type="text" name="nom_compte" class="form-control form-control-sm" />
                                {# <span class="input-group-text" style="border-right: none; height: 38px;"><i class="bi bi-file-earmark-text-fill"></i></span>
                                <select name="filter_facture" id="filter_facture" class="mb-3 form-control form-control-md" style="border-left: none;">
                                    <option value="" disabled selected><span class="mx-3">Toutes les factures</span></option>
                                    <option value="Facture 1">Facture 1</option>
                                    <option value="Facture 2">Facture 2</option>
                                    <option value="Facture 3">Facture 3</option>
                                    <option value="Facture 4">Facture 4</option>
                                </select> #}
                              </div>

                            <input type="text" name="date_facture_debut" id="date_facture_debut" class="mb-3 form-control form-control-ms date-facture" placeholder="Du dd/mm/yyyy">
                            <input type="text" name="date_paiement_debut" id="date_paiement_debut" class="mb-3 form-control form-control-ms date-facture" placeholder="Du dd/mm/yyyy">
                        </div>
                        <div class="col-md-4 col-12">
                            <div class="input-group">
                                {% set statutPaiement = constant('App\\Entity\\Affaire::PAIEMENT') %}
                                <span class="input-group-text" style="border-right: none; height: 38px;"><i class="bi bi-check-circle-fill"></i></span>
                                <select name="filter_status" id="filter_status" class="mb-3 form-control form-control-md" style="border-left: none;">
                                    <option value="" disabled selected><span class="mx-3">Statut</span></option>
                                    {% for key,statutPaie in statutPaiement %}
                                    <option value="{{statutPaie}}">{{statutPaie}}</option>
                                    {% endfor %}
                                </select>
                              </div>
                            <input type="text" name="date_facture_end" id="date_facture_end" class="mb-3 form-control form-control-ms date-facture" placeholder="Au dd/mm/yyyy">
                            <input type="text" name="date_paiement_end" id="date_paiement_end" class="mb-3 form-control form-control-ms date-facture" placeholder="Au dd/mm/yyyy">
                        
                        </div>
                    </div>
                </div>
                <div class="col-md-1 col-12 d-flex align-items-center justify-content-center">
                    <div class="text-center">
                        <a style="cursor: pointer;" onclick="return searchFacture()" class="icon-check"><i class="bi bi-check"></i></a> <br/><br>
                        <a style="cursor: pointer;" onclick="return reloadSearch()" class="icon-reload"><i class="bi bi-arrow-clockwise"></i></a>
                    </div>
                </div>
                
            </div>
          </div>

          <div class="card" id="factureList">
            <div class="card-body p-5">
                <div class="form-group d-flex justify-content-end mb-4">
                    <div class="dropdown">
                        <a class=" export-btn bg-warning p-2 dropdown-toggle text-black btn-list" href="#" role="button" id="dropdownMenuLink" data-bs-toggle="dropdown" aria-expanded="false">
                          <i class="bi bi-list"></i>
                        </a>
                      
                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                            <li><a href="#" onclick="exporterFacture('client');" class="dropdown-item"><i class="bi bi-file-earmark-excel-fill"></i><span class="mx-2">Exporter</span></a></li>
                        </ul>
                      </div>
                   
                </div>
                <table class="table table-striped table-facture" id="table-facture" style="width: 100%;">
                    <thead>
                        {% include 'admin/facture/_table.html.twig' with { 'type': 'thead' } %}
                    </thead>
                    <tbody>
                        {% if listes|length > 0 %}

                            {% for liste in listes %}
                                {% include 'admin/facture/_table.html.twig' with { 'type': 'tbody', 'liste': liste } %}
                            {% endfor %}
                        
                        {% else %}
                        <tr>
                            <td colspan="11">Aucun enregistrement trouvé</td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            {# <td></td> #}
                            {# <td></td>
                            <td></td>
                            <td></td>
                            <td></td> #}
                        </tr>
                        {% endif %}
                    </tbody>
                </table>
            </div>
            
          </div>
  
        </div>
      </div>
    </section>
  

    <script>

        function exporterFacture(type) {

            var inc = 0;
            /*$("input[type=checkbox]").each(function (index) {
                if ($(this).is(":checked")) {
                    inc++;
                }
            });*/

            //if (inc != 0) { 
                if (type == "client") {
                    var form = $('#allFacture');
                }else {
                    var form = $('#exportZip');
                }

                form.attr('action', '/admin/facture/tout-exporter');
                form.submit();
            /*} else {
                alert('Pas de facture séléctionner !!!')
            }*/


            return false;

        }
        
        /*function searchFacture(genre = 1) {
      var nomCompte = $("#nom_compte").val();
      var statutPaiement = $("#filter_status").val();
      //var genre = $("#genre").val();
      
      $.ajax({
                url: '/admin/facture/search',
                type: 'post',
                data: {nomCompte: nomCompte, statutPaiement: statutPaiement },
                success: function (response) {
                  
                 $("#factureList").empty();
                 $("#factureList").append(response.html);
                   
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    // Gérer l'erreur (par exemple, afficher un message d'erreur)
                    alert('Erreur lors de l\'ajout d\'un client.');
                }
        });
    }*/
      //datatable
      
    $(document).ready(function() {
        $('#tab-fiche-fournisseur').removeClass('active').empty();
        $('#tab-quantite-vendu').removeClass('active').empty();
        $('#tab-notification').removeClass('active').empty();
        $('#tab-historique-produit').removeClass('active').empty();
        $('#tab-historique-affaire').removeClass('active').empty();
      $('#tab-produit-date-peremption').removeClass('active').empty();
 $('#tab-stock').removeClass('active');
        $('#tab-inventaire-produit').css('display','none');

        $('.tab-categorie').removeClass('active');
        $('#tab-produit-categorie').removeClass('active');
        $('.tab-produit-categorie').removeClass('active');
        $('#tab-categorie').removeClass('active');
        $('.tab-import-produit').removeClass('active');
        $('#tab-import-produit').removeClass('active');
  
  
        $('.tab-user').removeClass('active');
        $('#tab-utilisateur').removeClass('active');
  
        $('.tab-permission').removeClass('active');
        $('.tab-privilege').removeClass('active');
        $('.tab-cat-permission').removeClass('active');
        $('#tab-categorie-permission').removeClass('active');
        
        $('#tab-dashboard').removeClass('active');
        $('#tab-profile').removeClass('active');
       
        $('#tab-permission').removeClass('active');
        $('#tab-privilege').removeClass('active');
        $('#tab-transfert-produit').css('display', 'none');
        $('#affaires_client').removeClass('active').empty();
         $('#affaires_fournisseur').removeClass('active').empty();
         $('#tab-info-affaire').removeClass('active').empty();
         $('#tab-financier-affaire').removeClass('active').empty();
        $('#tab-fiche-client').removeClass('active').empty();
        
        $('#tab-application').removeClass('active');
        $('#tab-profile').removeClass('active');
         $('#tab-compte_1').removeClass('active');
        $('#tab-produit-type').removeClass('active');
        $('.tab-produit-type').removeClass('active');
        $('#tab-import-produit').css('display', 'none');
        $('#tab-facture').css('display', 'block');
        $('#tab-facture-affaire').css('display', 'none');


        /*$('.table-facture-affaire').DataTable({
            responsive: true,
            language: {
                url: 'https://cdn.datatables.net/plug-ins/1.13.7/i18n/fr-FR.json',
            },
            border: false,
            scrollX: '100%',
            pageLength: 10,
            scrollCollapse: false,
        });*/

      });

      $(document).ready(function() {
        var dateFormat = 'dd/mm/yyyy';
        var dateNow = new Date();
        dateNow.setDate(dateNow.getDate() + 1)

        $('.date-facture').datepicker({
            format: dateFormat,
            todayHighlight: true,
            //daysOfWeekDisabled: '0',
            //startDate: dateNow,
            language: 'fr',
            autoclose: true,
            minDate: null,
            maxDate: null,

        });

    });
  
    </script>

<script>
    function showSpinner() {
    document.getElementById('spinner').style.display = 'block';
    document.getElementById('overlay').style.display = 'block';
  }
  
  function hideSpinner() {
    document.getElementById('spinner').style.display = 'none';
    document.getElementById('overlay').style.display = 'none';
  }

    // Fonction pour convertir une date au format d-m-Y en Date
    function parseDate(dateStr) {
        var parts = dateStr.split('/');
        return new Date(parts[2], parts[1] - 1, parts[0]);
    }

     // Fonction pour obtenir le statut mappé
     function mapStatus(selectedStatus) {
        var statusMap = {
            'Non payé': 'Réglée',   // Mappage des valeurs du sélecteur
            'Payé': 'Réglée',       // Ajustez ce mappage selon votre besoin
            'Annulé': 'Annulée'
        };
        return statusMap[selectedStatus] || '';
    }

    // Fonction appelée lors du clic sur l'icône de recherche
    function searchFacture() {
        showSpinner();
        setTimeout(function() {
            // Récupération des valeurs des filtres
            var nomCompte = document.getElementById('nom_compte').value.toLowerCase();
            var dateFactureDebut = document.getElementById('date_facture_debut').value;
            var datePaiementDebut = document.getElementById('date_paiement_debut').value;
            var dateFactureEnd = document.getElementById('date_facture_end').value;
            var datePaiementEnd = document.getElementById('date_paiement_end').value;
            var statut = document.getElementById('filter_status').value.trim();
            var mappedStatut = mapStatus(statut);

            // Récupération des lignes du tableau
            var table = document.getElementById('table-facture');
            var rows = table.getElementsByTagName('tbody')[0].getElementsByTagName('tr');

            // Parcours des lignes pour appliquer les filtres
            for (var i = 0; i < rows.length; i++) {
                var row = rows[i];
                var cells = row.getElementsByTagName('td');
                var showRow = true;

                // Filtrer par nom de compte
                if (nomCompte && cells[7].textContent.toLowerCase().indexOf(nomCompte) === -1) {
                    showRow = false;
                }

                // Filtrer par statut
                var cellStatut = cells[11].textContent.trim();
                if (mappedStatut && cellStatut !== mappedStatut) {
                    showRow = false;
                }

                // Filtrer par dates
                var dateFacture = parseDate(cells[4].textContent.trim()); // assuming format is d-m-Y
                var datePaiement = parseDate(cells[10].textContent.trim()); // assuming format is d-m-Y

                if (dateFactureDebut) {
                    var startDateFactureDebut = parseDate(dateFactureDebut);
                    if (dateFacture < startDateFactureDebut) {
                        showRow = false;
                    }
                }
                if (dateFactureEnd) {
                    var endDateFactureEnd = parseDate(dateFactureEnd);
                    if (dateFacture > endDateFactureEnd) {
                        showRow = false;
                    }
                }
                if (datePaiementDebut) {
                    var startDatePaiementDebut = parseDate(datePaiementDebut);
                    if (datePaiement < startDatePaiementDebut) {
                        showRow = false;
                    }
                }
                if (datePaiementEnd) {
                    var endDatePaiementEnd = parseDate(datePaiementEnd);
                    if (datePaiement > endDatePaiementEnd) {
                        showRow = false;
                    }
                }

                // Afficher ou masquer la ligne en fonction du filtre
                if (showRow) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            }

            // Masquer le spinner après le traitement
            hideSpinner();
        }, 2000);
    }

    function reloadSearch() {
        showSpinner();
        setTimeout(function() {
        // Réinitialiser les filtres
        document.getElementById('nom_compte').value = '';
        document.getElementById('date_facture_debut').value = '';
        document.getElementById('date_paiement_debut').value = '';
        document.getElementById('date_facture_end').value = '';
        document.getElementById('date_paiement_end').value = '';
        document.getElementById('filter_status').value = '';

        // Recharger la DataTable (ou table) à l'état initial
        var table = document.getElementById('table-facture');
        var rows = table.getElementsByTagName('tbody')[0].getElementsByTagName('tr');

        for (var i = 0; i < rows.length; i++) {
            rows[i].style.display = '';
        }
        
        // Optionnel : si vous utilisez DataTables, vous pouvez réinitialiser comme ceci :
        // $('#table-facture').DataTable().search('').draw();
         // Masquer le spinner après le traitement
         hideSpinner();
        }, 2000);
        
    }

    // Ajout de l'événement click à l'icône de recherche
    document.addEventListener('DOMContentLoaded', function() {
        var searchButton = document.querySelector('.icon-check');
        searchButton.addEventListener('click', searchFacture);
    });
</script>

    
