{% form_theme form 'admin/facture_echeance/_collection.html.twig' %}
<div class="affaire-id" data-affaire="{{affaire.id}}"></div>
<div class="modal fade" id="modalFactureEcheance" tabindex="-1" aria-labelledby="modalNewLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog ">
        <div class="modal-content p-4 ">
            <div class="modal-header modal-header-center">
                <h5 class="modal-title fw-bold" id="modalNewLabel">Nouveau facture d'écheance</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                <hr>
            </div>
            <div class="modal-body">
                {% set montantHt = 0 %}
                {% for product in produits %}
                    {% if product.typeVente == "gros" %}
                    {% set montantHt = montantHt + (product.qtt * product.prixVenteGros) %}
                    {% else %}
                        {% set montantHt = montantHt + (product.qtt * product.prixVenteDetail) %}
                    {% endif %}
                {% endfor %}
                <p class="fw-bold mb-4">Total à payer : {{ montantHt|number_format(2, ',', ' ') }} Ar</p>
                <div class="alert alert-danger error">

                </div>
                {{ form_start(form, {'attr': {'id': 'newFactureEcheance', 'action': path('factures_echeance_create', {'affaire': affaire.id}) }}) }}
                    <input type="hidden" name="montantHt" value="{{ montantHt }}">
                    <div class="form-group mb-4">
                        <label for="" class="mb-2">Avance</label>
                        {{form_widget(form.reglement)}}
                    </div>
                    <div class="form-group mb-3">
                        {{form_widget(form.factureEcheances)}}
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary btn-sm px-5 mt-3" style="width: 100%;">Ajouter écheances</button>
                    </div>
                {{ form_end(form) }}               
            </div>
        </div>
    </div>
</div>

{% block javascripts %}
<script src="{{ asset('assets/js/script_utile.js')}}"></script>
<script>

$(document).ready(function() {
    function addEcheance() {
        // Récupère l'index actuel basé sur le nombre d'échéances existantes
        const index = +$('#widgets-counter').val();

        let tmpl = $('#add_facture_echeance_factureEcheances').data('prototype').replace(/__name__/g, index);

        // Convertir la chaîne tmpl en un objet jQuery pour manipulation
        let $tmpl = $(tmpl);

        // Modifier le numéro d'échéance
        const echeanceNumber = index + 1;
        $tmpl.find('.echeance-number').text(echeanceNumber);

        // Ajouter l'élément au DOM
        $('#add_facture_echeance_factureEcheances').append($tmpl);

        // Incrémenter le compteur après avoir ajouté le nouvel élément
        $('#widgets-counter').val(index + 1);

        // Ajouter des écouteurs d'événements pour les champs de délai de paiement
        $tmpl.find('input[name$="[delaiPaiement]"]').on('input', function() {
            calculateDateEcheance($(this).closest('.form-content'));
        });

        handleDelete();
    }

    function initializeDefaultEcheances() {
        // Réinitialiser le compteur en fonction du nombre d'échéances existantes
        const $echeancesContainer = $('#add_facture_echeance_factureEcheances');
        const $existingEcheances = $echeancesContainer.find('.form-group');
        const initialCount = $existingEcheances.length;

        // Mettre à jour le compteur
        $('#widgets-counter').val(initialCount);

        // Assigner les numéros aux éléments par défaut et ajouter les écouteurs d'événements
        $existingEcheances.each(function(index) {
            $(this).find('.echeance-number').text(index + 1);
            // Ajouter des écouteurs d'événements pour les champs de délai de paiement
            $(this).find('input[name$="[delaiPaiement]"]').on('input', function() {
                calculateDateEcheance($(this).closest('.form-content'));
            });
        });
    }

    function handleDelete() {
        $('a[data-action="delete"]').click(function() {
            const target = this.dataset.target;
            $(target).remove();
            updateCounter();
            updateEcheanceNumbers();
        });
    }

    function updateCounter() {
        // Mettre à jour le compteur basé sur le nombre d’échéances existantes
        const count = $('#add_facture_echeance_factureEcheances .form-group').length;
        $('#widgets-counter').val(count);
    }

    function updateEcheanceNumbers() {
        // Recalculer les numéros d’échéance pour qu’ils soient consécutifs
        $('#add_facture_echeance_factureEcheances .form-group').each(function(index) {
            $(this).find('.echeance-number').text(index + 1);
        });
    }

   
    function calculateDateEcheance($element) {
        const $dateEcheance = $element.find('input[name$="[dateEcheance]"]');
        const $delaiPaiement = $element.find('input[name$="[delaiPaiement]"]');
        const $dateEcheanceText = $element.find('.date-echeance-text');

        const delai = parseInt($delaiPaiement.val(), 10);

        if (!isNaN(delai)) {
            const today = moment().add(delai, 'days');

            // Formatage de la date au format dd-mm-yyyy pour le champ input
            const formattedDate = today.format('DD/MM/YYYY');

            // Formatage de la date en lettres pour le texte
            const formattedDateText = today.format('dddd DD MMMM YYYY');

            // Définir la valeur du champ de date d'échéance
            $dateEcheance.val(formattedDate);

            // Afficher la date formatée en lettres
            $dateEcheanceText.text(formattedDateText);
        } else {
            $dateEcheance.val('');
            $dateEcheanceText.text('');
        }
    }

    // Initialisation : 
    initializeDefaultEcheances(); // Affiche les éléments par défaut avec les indices corrects

    // Ajouter une échéance au chargement de la page
    addEcheance();

    // Gestion du clic pour ajouter une nouvelle échéance
    $("#add-echeance").click(function() {
        addEcheance();
    });

    // Gérer les suppressions
    handleDelete();
});


$(document).ready(function () {
    var anchorName = document.location.hash.substring(1);
    idAffaire = $('.affaire-id').data('affaire');
    $('.error').hide();
    $('#newFactureEcheance').on('submit', function (e) {
         e.preventDefault();
         let form = $(this);
       
         // Create an FormData object
         let formData = new FormData(form[0]);
       formData.append('isNew', false);
         $.ajax({
             url: form.attr('action'),
             type: form.attr('method'),
             data: formData,
             processData: false,
             contentType: false,
             success: function (response) {

                if(response.status == "error") {
                     $('#modalFactureEcheance').modal('show');
                     $('.error').show();
                     $('.error').text(response.message);
                } else {

                 $('#modalFactureEcheance').modal('hide');
                 var nextLink = $('#sidebar').find('li#financier').find('a');
                 setTimeout(function () {
                     toastr.options = {
                         closeButton: true,
                         progressBar: true,
                         showMethod: 'slideDown',
                         timeOut: 1000
                     };
                     toastr.success('Avec succèss', 'Enregistrement effectuée');

                     //$(".loadBody").css('display', 'none');

                 }, 800);
                 if (nextLink.length > 0) {
                     nextLink.click();
                 }

                 if (anchorName) {
                    window.location.hash = anchorName;
                }

                financier(idAffaire);
            }
             },
             error: function (jqXHR, textStatus, errorThrown) {
                 // Gérer l'erreur (par exemple, afficher un message d'erreur)
                 alert('Erreur lors de l\'ajout de facture écheance');
             }
         });
     });
 });

</script>
{% endblock %}